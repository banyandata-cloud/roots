name: Release package

on:
    workflow_dispatch:
        inputs:
            release-type:
                description: 'Release type (one of): patch, minor, major, prepatch, preminor, premajor, prerelease'
                required: true

jobs:
    release:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            # Setup Node.js environment
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  registry-url: https://registry.npmjs.org/
                  node-version: 20

            # Setup Bun
            - name: Setup Bun
              uses: oven-sh/setup-bun@v1
              with:
                  bun-version: latest

            # Install dependencies using Bun
            - name: Install dependencies
              run: bun install

            # Run build using Bun
            - name: Run build
              run: bun run build

            # Git configuration
            - name: Git configuration
              run: |
                  git config --global user.email "pradeep@banyancloud.io"
                  git config --global user.name "PDP-Banyan"

            # Bump release version
            - name: Bump release version
              if: startsWith(github.event.inputs.release-type, 'pre') != true
              run: |
                  echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
                  echo "RELEASE_TAG=latest" >> $GITHUB_ENV
              env:
                  RELEASE_TYPE: ${{ github.event.inputs.release-type }}

            # Bump pre-release version
            - name: Bump pre-release version
              if: startsWith(github.event.inputs.release-type, 'pre')
              run: |
                  echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE)" >> $GITHUB_ENV
                  echo "RELEASE_TAG=beta" >> $GITHUB_ENV
              env:
                  RELEASE_TYPE: ${{ github.event.inputs.release-type }}

            # Update changelog
            - name: Update changelog
              uses: superfaceai/release-changelog-action@v1
              with:
                  path-to-changelog: CHANGELOG.md
                  version: ${{ env.NEW_VERSION }}
                  operation: release

            # Commit changes
            - name: Commit CHANGELOG.md and package.json changes and create tag
              run: |
                  git add "package.json"
                  git add "CHANGELOG.md"
                  git commit -m "chore: release ${{ env.NEW_VERSION }}"
                  git tag ${{ env.NEW_VERSION }}

            # Publish version
            - name: Publish
              run: npm publish --verbose --access public --tag ${{ env.RELEASE_TAG }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPMJS_ACCESS_TOKEN }}

            # Push repository changes
            - name: Push changes to repository
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  git push origin main:actions && git push origin main:actions --tags

            # Create Pull Request
            - name: Create Pull Request
              id: npm-publish
              uses: peter-evans/create-pull-request@v4
              with:
                  commit-message: npm publish - open PR - added tag
                  title: npm publish - open PR
                  body: npm publish - open PR
                  base: main
                  labels: automated-pr, npm publish
                  branch: actions
                  delete-branch: true

            # Auto approve PR
            - name: Auto approve
              uses: juliangruber/approve-pull-request-action@v1
              with:
                  github-token: ${{ secrets.PDP_ACC }}
                  number: ${{ steps.npm-publish.outputs.pull-request-number }}

            # Auto merge PR
            - name: Auto merge PR
              uses: juliangruber/merge-pull-request-action@v1
              with:
                  github-token: ${{ secrets.PDP_ACC }}
                  number: ${{ steps.npm-publish.outputs.pull-request-number }}
                  method: squash

            # Get changelog
            - id: get-changelog
              name: Get version changelog
              uses: superfaceai/release-changelog-action@v1
              with:
                  path-to-changelog: CHANGELOG.md
                  version: ${{ env.NEW_VERSION }}
                  operation: read

            # Update GitHub release
            - name: Update GitHub release documentation
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ env.NEW_VERSION }}
                  body: ${{ steps.get-changelog.outputs.changelog }}
                  prerelease: ${{ startsWith(github.event.inputs.release-type, 'pre') }}
                  generate_release_notes: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
