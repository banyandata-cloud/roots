{
	"compilerOptions": {
		/* Basic Options */
		"target": "es2020" /* Specify ECMAScript target version for broader compatibility */,
		"module": "esnext" /* Specify module code generation */,
		"lib": [
			"dom",
			"dom.iterable",
			"esnext"
		] /* Specify library files to be included in the compilation */,
		"allowJs": true /* Allow JavaScript files to be compiled during migration */,
		"checkJs": true /* Report errors in .js files */,
		"jsx": "react-jsx" /* Specify JSX code generation for library compatibility */,
		"declaration": true /* Generate corresponding .d.ts file - crucial for a library */,
		"declarationMap": true /* Generate a sourcemap for each corresponding '.d.ts' file */,
		"sourceMap": true /* Generate corresponding .map file */,
		"declarationDir": "./dist/types",
		"outDir": "./dist" /* Redirect output structure to the directory */,
		"rootDir": "./" /* Specify the root directory of input files */,
		"removeComments": false /* Keep comments in output for better documentation */,
		"isolatedModules": true /* Transpile each file as a separate module */,
		"forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references */,

		/* Strict Type-Checking Options */
		"strict": true /* Enable all strict type-checking options */,
		"noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type */,
		"strictNullChecks": true /* Enable strict null checks */,
		"strictFunctionTypes": true /* Enable strict checking of function types */,
		"strictBindCallApply": true /* Enable strict 'bind', 'call', and 'apply' methods on functions */,
		"strictPropertyInitialization": true /* Enable strict checking of property initialization in classes */,
		"noImplicitThis": true /* Raise error on 'this' expressions with an implied 'any' type */,
		"alwaysStrict": true /* Parse in strict mode and emit "use strict" for each source file */,
		"useUnknownInCatchVariables": true /* Type catch clause variables as 'unknown' instead of 'any' */,

		/* Additional Checks */
		"noUnusedLocals": true /* Report errors on unused locals */,
		"noUnusedParameters": true /* Report errors on unused parameters */,
		"noImplicitReturns": true /* Report error when not all code paths in function return a value */,
		"noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement */,
		"noUncheckedIndexedAccess": true /* Include 'undefined' in index signature results */,
		"noImplicitOverride": true /* Ensure overriding members are marked with override */,
		"noPropertyAccessFromIndexSignature": false /* Require undeclared properties from index signatures to use element access */,

		/* Module Resolution Options */
		"moduleResolution": "bundler" /* Specify module resolution strategy */,
		"baseUrl": "./src" /* Base directory to resolve non-absolute module names */,
		"paths": {
			"@/*": ["src/*"] /* Path mapping for src imports */,
			"@types/*": ["src/types/*"] /* Path mapping for types folder */
		},
		"esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules */,
		"allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export */,
		"resolveJsonModule": true /* Include modules imported with .json extension */,
		"preserveSymlinks": true /* Do not resolve symlinks to their real path - good for libraries */,

		/* Library-specific Options */
		"importHelpers": true /* Import helpers from tslib - reduces bundle size */,
		"skipLibCheck": true /* Skip type checking of declaration files */,
		"verbatimModuleSyntax": true /* Use 'import type' and 'export type' */,
		"exactOptionalPropertyTypes": true /* Interpret optional property types as written */
	},
	"include": ["src/**/*"],
	"exclude": [
		"node_modules",
		"dist",
		"**/*.test.ts",
		"**/*.test.tsx",
		".storybook",
		"**/*.stories.mdx",
		"**/*.stories.tsx",
		"*.js"
	]
}
